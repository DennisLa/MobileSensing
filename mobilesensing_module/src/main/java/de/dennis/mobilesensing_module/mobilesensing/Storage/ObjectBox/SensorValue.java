package de.dennis.mobilesensing_module.mobilesensing.Storage.ObjectBox;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.List;

import io.objectbox.annotation.Backlink;
import io.objectbox.annotation.Entity;
import io.objectbox.annotation.Id;
import io.objectbox.annotation.Relation;
import io.objectbox.relation.ToMany;
import io.objectbox.annotation.Generated;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.BoxStore;
import io.objectbox.relation.ToOne;

/**
 * Created by Dennis on 07.08.2017.
 */
@Entity
public class SensorValue {
    @Id
    private long id;
    private long timestamp;

    private int index;

    @Backlink
    private List<GeoPointEntity> geoPointEntities = new ToMany<>(this, SensorValue_.geoPointEntities);

    @Backlink
    private List<IntegerEntity> integerEntities = new ToMany<>(this, SensorValue_.integerEntities);

    @Backlink
    private List<StringEntity> stringEntities = new ToMany<>(this, SensorValue_.stringEntities);

    @Backlink
    private List<DoubleEntity> doubleEntities = new ToMany<>(this, SensorValue_.doubleEntities);

    @Relation
    private SensorTimeseries sensor_timeseries;
    /** Used to resolve relations */
    @Internal
    @Generated(1307364262)
    transient BoxStore __boxStore;
    @Generated(1397322509)
    @Internal
    /** This constructor was generated by ObjectBox and may change any time. */
    public SensorValue(long id, long timestamp, int index, long sensor_timeseriesId) {
        this.id = id;
        this.timestamp = timestamp;
        this.index = index;
        this.sensor_timeseriesToOne.setTargetId(sensor_timeseriesId);
    }
    @Generated(1511460590)
    public SensorValue() {
    }

    public long getId() {
        return id;
    }
    public void setId(long id) {
        this.id = id;
    }
    public long getTimestamp() {
        return timestamp;
    }
    public void setTimestamp(long timestamp) {
        this.timestamp = timestamp;
    }
    @Internal
    @Generated(1539810802)
    transient ToOne<SensorTimeseries> sensor_timeseriesToOne = new ToOne<>(this,
            SensorValue_.sensor_timeseries);
    /** To-one relationship, resolved on first access. */
    @Generated(816761306)
    public SensorTimeseries getSensor_timeseries() {
        sensor_timeseries = sensor_timeseriesToOne.getTarget();
        return sensor_timeseries;
    }
    /** Set the to-one relation including its ID property. */
    @Generated(464093738)
    public void setSensor_timeseries(SensorTimeseries sensor_timeseries) {
        sensor_timeseriesToOne.setTarget(sensor_timeseries);
        this.sensor_timeseries = sensor_timeseries;
    }

    public BoxStore get__boxStore() {
        return __boxStore;
    }

    public void set__boxStore(BoxStore __boxStore) {
        this.__boxStore = __boxStore;
    }

    public ToOne<SensorTimeseries> getSensor_timeseriesToOne() {
        return sensor_timeseriesToOne;
    }

    public void setSensor_timeseriesToOne(ToOne<SensorTimeseries> sensor_timeseriesToOne) {
        this.sensor_timeseriesToOne = sensor_timeseriesToOne;
    }
    //Constructor
    public SensorValue(long timestamp){
        this.id = 0;
        this.timestamp = timestamp;
        index = 0;
    }

    public List<GeoPointEntity> getGeoPointEntities() {
        return geoPointEntities;
    }

    public List<IntegerEntity> getIntegerEntities() {
        return integerEntities;
    }

    public List<StringEntity> getStringEntities() {
        return stringEntities;
    }

    public void addGeoPointEntity(GeoPointEntity gp){
        if(geoPointEntities ==null)
        {
            geoPointEntities = new ArrayList<>();
        }
        gp.setSortIndex(index);
        gp.setSensor_value(this);
        geoPointEntities.add(gp);
        index++;
    }
    public void addIntegerEntitiy(IntegerEntity ie){
        if(integerEntities ==null)
        {
            integerEntities = new ArrayList<>();
        }
        ie.setSortIndex(index);
        ie.setSensor_value(this);
        integerEntities.add(ie);
        index++;
    }
    public void addStringEntitiy(StringEntity se){
        if(stringEntities ==null)
        {
            stringEntities = new ArrayList<>();
        }
        se.setSortIndex(index);
        se.setSensor_value(this);
        stringEntities.add(se);
        index++;
    }

    public void addDoubleEntitiy(DoubleEntity de){
        if(doubleEntities ==null)
        {
            doubleEntities = new ArrayList<>();
        }
        de.setSortIndex(index);
        de.setSensor_value(this);
        doubleEntities.add(de);
        index++;
    }

    public ArrayList<Object> getValues(){
        ArrayList<Object> alo = new ArrayList<>();
        int i = getIntegerEntities().size();
        int j = getStringEntities().size();
        int k = getGeoPointEntities().size();
        Object oa[] = new Object[getIntegerEntities().size()+getStringEntities().size()+geoPointEntities.size()+doubleEntities.size()];
        for(IntegerEntity ie : integerEntities){
            oa[ie.getSortIndex()]= ie;
        }
        for(StringEntity se: stringEntities){
            oa[se.getSortIndex()]=se;
        }
        for(GeoPointEntity gpe: geoPointEntities){
            oa[gpe.getSortIndex()]=gpe;
        }
        for(DoubleEntity de: doubleEntities){
            oa[de.getSortIndex()] =de;
        }
        for(Object o: oa){
            if(o !=null){
                alo.add(o);
            }
        }
        return alo;
    }

    public void setIndex(int index) {
        this.index = index;
    }

    public void setGeoPointEntities(List<GeoPointEntity> geoPointEntities) {
        this.geoPointEntities = geoPointEntities;
    }

    public void setIntegerEntities(List<IntegerEntity> integerEntities) {
        this.integerEntities = integerEntities;
    }

    public void setStringEntities(List<StringEntity> stringEntities) {
        this.stringEntities = stringEntities;
    }

    public List<DoubleEntity> getDoubleEntities() {
        return doubleEntities;
    }

    public void setDoubleEntities(List<DoubleEntity> doubleEntities) {
        this.doubleEntities = doubleEntities;
    }

    public JSONObject toJSON() throws JSONException {
        /*
        {"timestamp":"1471352846000", "value": [0.85, 0.6, 0.5]}
         */
        JSONObject sv = new JSONObject();
        sv.put("timestamp",getTimestamp());
        JSONArray value = new JSONArray();
        ArrayList<Object> alo = getValues();
        for(Object o: alo){
            if (o.getClass().equals(GeoPointEntity.class)){
                value.put(((GeoPointEntity)o).toJSON());
            }
            if(o.getClass().equals(StringEntity.class)){
                value.put(((StringEntity)o).getValue());
            }
            if(o.getClass().equals(IntegerEntity.class)){
                value.put(((IntegerEntity)o).getValue());
            }
            if(o.getClass().equals(DoubleEntity.class)){
                value.put(((DoubleEntity)o).getValue());
            }
        }
        sv.put("value",value);
        return  sv;
    }
    public int getIndex() {
        return index;
    }
}
